<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="$(ProjectCommonsDirectory)Project.Code.props" />
  <Import Project="$(ProjectCommonsDirectory)Project.NuGetPackage.props" />
  <Import Project="$(MSBuildThisFileDirectory)Version.props" />

  <PropertyGroup>
    <!-- Important: Must be .NET Standard 2.0 so that the tasks can run both in Visual Studio and dotnet build.
           See also: https://docs.microsoft.com/en-us/visualstudio/msbuild/tutorial-custom-task-code-generation?view=vs-2022#create-the-appsettingstronglytyped-project
    -->
    <TargetFramework>netstandard2.0</TargetFramework>

    <LangVersion>latest</LangVersion>

    <Version>$(MustacheMSBuildVersion)</Version>

    <!-- Required even in Debug builds so that the end-to-end tests can run (which require the package). -->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <!-- Copy NuGet dependencies to output directory so that Costura.Fody can embed them. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- Not sure why, but we need to disable this or MSBuild won't be able to load this assembly. -->
    <EmbedJetbrainsAnnotations>false</EmbedJetbrainsAnnotations>

    <!-- Don't list any NuGet dependencies for this package - as this is a dev dependency and
         consuming projects must not use any of our dependencies.
    -->
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>

    <!-- Do not put the built assembly into the NuGet package directly - to prevent the consuming project
         from accidentially using the types in the assembly. Instead, the assembly is placed in the "tools"
         folder (see below).
    -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <!-- NU5128 must be disabled because of IncludeBuildOutput=false. -->
    <NoWarn>NU5128</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <!-- Include the built assembly in the "tools" folder in the NuGet package. -->
    <None Include="$(TargetPath)" Pack="true" PackagePath="tools" Visible="false" />
  </ItemGroup>

  <PropertyGroup Label="NuGet package properties">
    <Description>Renders Mustache templates when compiling projects. Uses JSON as data files.</Description>

    <PackageTags>MSBuild;Mustache;Template;Templates;Templating;CodeGenerator;CodeGeneration</PackageTags>

    <!-- See: https://spdx.org/licenses/ -->
    <PackageLicenseExpression>MIT</PackageLicenseExpression>

    <RepositoryUrl>https://github.com/skrysmanski/Mustache.MSBuild</RepositoryUrl>

    <!-- Mark this NuGet package as "dev dependency" so that users of this package don't create assemblies
         that depend on this package. Is just for the build process.
    -->
    <DevelopmentDependency>true</DevelopmentDependency>

    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <!-- IMPORTANT: Must set "Pack" "True" to be included in the NuGet package.
         IMPORTANT 2: The folder "build" (inside a NuGet package) is special. Any .target or .props file in
            this folder is automatically imported in each project (file) that references the NuGet package.
            See: https://docs.microsoft.com/en-us/nuget/concepts/msbuild-props-and-targets
         IMPORTANT 3: The "PackagePath" must be specified explicitely; without it the file would end up
            in the wrong folder (contentFiles\any\netstandard2.0\build\).
    -->
    <None Include="build\*.*" Pack="True" PackagePath="build\" />
    <!-- This is required so that changes to files in the "build" folder mark the project as "dirty" in Visual Studio.
         Without this, even when the files in the "build" folder changed, Visual Studio would still think the project
         is up-to-date and not build it.
    -->
    <UpToDateCheckInput Include="build\*.*" />
  </ItemGroup>

  <!-- Remove bin directory from project. Is needed but I'm not sure why. -->
  <ItemGroup>
    <Compile Remove="bin\**" />
    <EmbeddedResource Remove="bin\**" />
    <None Remove="bin\**" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Version.props" Pack="True" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Link="README.md" Pack="True" PackagePath="\" />
  </ItemGroup>

  <!-- We use "Costura.Fody" to bundle all dependencies inside the resulting assembly.
       This is required because without this, MSBuild won't be able to find dependencies of this assembly
       (e.g. "Stubble.Core").
  -->
  <ItemGroup>
    <PackageReference Include="AppMotor.NetStandardCompatKit" Version="0.2.2" />
    <PackageReference Include="Costura.Fody" Version="6.0.0">
      <!-- This is a dev dependency. -->
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="17.14.8" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Stubble.Core" Version="1.10.8" />
    <PackageReference Include="TestableIO.System.IO.Abstractions" Version="22.0.15" />
    <PackageReference Include="TestableIO.System.IO.Abstractions.Wrappers" Version="22.0.15" />
  </ItemGroup>

</Project>
